// <auto-generated />
using CodeMindful.CodeTools.DataDictionary;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CodeMindful.CodeTools.DataDictionary.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CodeMindful.CodeTools.DataDictionary.Models.Catalog", b =>
                {
                    b.Property<string>("CatalogName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CatalogName")
                        .HasName("PK_Catalogs");

                    b.ToTable("Catalogs", "dbo");
                });

            modelBuilder.Entity("CodeMindful.CodeTools.DataDictionary.Models.Column", b =>
                {
                    b.Property<int>("SqlObjectId")
                        .HasColumnType("int");

                    b.Property<int>("Ordinal")
                        .HasColumnType("int");

                    b.Property<string>("ColumnName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Default")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsNullable")
                        .HasColumnType("bit");

                    b.HasKey("SqlObjectId", "Ordinal")
                        .HasName("PK_Columns");

                    b.HasIndex(new[] { "ColumnName" }, "ColumnName");

                    b.ToTable("Columns", "dbo");
                });

            modelBuilder.Entity("CodeMindful.CodeTools.DataDictionary.Models.Integration", b =>
                {
                    b.Property<int>("IntegrationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IntegrationId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntegrationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("ParentIntegrationId")
                        .HasColumnType("int");

                    b.HasKey("IntegrationId")
                        .HasName("PK_Integrations");

                    b.HasIndex("ParentIntegrationId");

                    b.HasIndex(new[] { "Name" }, "Name")
                        .IsUnique();

                    b.ToTable("Integrations", "dbo");
                });

            modelBuilder.Entity("CodeMindful.CodeTools.DataDictionary.Models.IntegrationObject", b =>
                {
                    b.Property<int>("IntegrationId")
                        .HasColumnType("int");

                    b.Property<int>("SqlObjectId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Operation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IntegrationId", "SqlObjectId")
                        .HasName("PK_IntegrationObjects");

                    b.HasIndex("SqlObjectId");

                    b.ToTable("IntegrationObjects", "dbo");
                });

            modelBuilder.Entity("CodeMindful.CodeTools.DataDictionary.Models.Schema", b =>
                {
                    b.Property<string>("CatalogName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SchemaName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Owner")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CatalogName", "SchemaName")
                        .HasName("PK_Schemas");

                    b.ToTable("Schemas", "dbo");
                });

            modelBuilder.Entity("CodeMindful.CodeTools.DataDictionary.Models.Server", b =>
                {
                    b.Property<string>("ServerName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Environment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ServerName")
                        .HasName("PK_Servers");

                    b.ToTable("Servers", "dbo");
                });

            modelBuilder.Entity("CodeMindful.CodeTools.DataDictionary.Models.ServerCatalog", b =>
                {
                    b.Property<string>("ServerName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CatalogName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ServerName", "CatalogName")
                        .HasName("PK_ServerCatalogs");

                    b.HasIndex("CatalogName");

                    b.ToTable("ServerCatalogs", "dbo");
                });

            modelBuilder.Entity("CodeMindful.CodeTools.DataDictionary.Models.SqlDependency", b =>
                {
                    b.Property<int>("SqlDependencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SqlDependencyId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Operation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReferencedObjectId")
                        .HasColumnType("int");

                    b.Property<int>("SqlObjectId")
                        .HasColumnType("int");

                    b.HasKey("SqlDependencyId")
                        .HasName("PK_SqlDependencies");

                    b.HasIndex("ReferencedObjectId");

                    b.HasIndex("SqlObjectId");

                    b.ToTable("SqlDependencies", "dbo");
                });

            modelBuilder.Entity("CodeMindful.CodeTools.DataDictionary.Models.SqlDependencyError", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CatalogName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferencedCatalogName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReferencedObjectId")
                        .HasColumnType("int");

                    b.Property<string>("ReferencedObjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferencedSchemaName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchemaName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SqlObjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReferencedObjectId");

                    b.HasIndex("SqlObjectId");

                    b.ToTable("SqlDependencyErrors");
                });

            modelBuilder.Entity("CodeMindful.CodeTools.DataDictionary.Models.SqlObject", b =>
                {
                    b.Property<int>("SqlObjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SqlObjectId"));

                    b.Property<string>("CatalogName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Data_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Definition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Ignore")
                        .HasColumnType("bit");

                    b.Property<string>("ObjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Operation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchemaName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SqlObjectId")
                        .HasName("PK_SqlObjects");

                    b.HasIndex(new[] { "ObjectName" }, "ObjectName");

                    b.HasIndex(new[] { "CatalogName", "SchemaName", "ObjectName" }, "QualifiedName")
                        .IsUnique();

                    b.ToTable("SqlObjects", "dbo");
                });

            modelBuilder.Entity("CodeMindful.CodeTools.DataDictionary.Models.Column", b =>
                {
                    b.HasOne("CodeMindful.CodeTools.DataDictionary.Models.SqlObject", "Table")
                        .WithMany()
                        .HasForeignKey("SqlObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Table");
                });

            modelBuilder.Entity("CodeMindful.CodeTools.DataDictionary.Models.Integration", b =>
                {
                    b.HasOne("CodeMindful.CodeTools.DataDictionary.Models.Integration", "ParentIntegration")
                        .WithMany("ChildIntegrations")
                        .HasForeignKey("ParentIntegrationId");

                    b.Navigation("ParentIntegration");
                });

            modelBuilder.Entity("CodeMindful.CodeTools.DataDictionary.Models.IntegrationObject", b =>
                {
                    b.HasOne("CodeMindful.CodeTools.DataDictionary.Models.Integration", "Integration")
                        .WithMany("IntegrationObjects")
                        .HasForeignKey("IntegrationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CodeMindful.CodeTools.DataDictionary.Models.SqlObject", "SqlObject")
                        .WithMany()
                        .HasForeignKey("SqlObjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Integration");

                    b.Navigation("SqlObject");
                });

            modelBuilder.Entity("CodeMindful.CodeTools.DataDictionary.Models.ServerCatalog", b =>
                {
                    b.HasOne("CodeMindful.CodeTools.DataDictionary.Models.Catalog", "Catalog")
                        .WithMany()
                        .HasForeignKey("CatalogName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodeMindful.CodeTools.DataDictionary.Models.Server", "Server")
                        .WithMany()
                        .HasForeignKey("ServerName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catalog");

                    b.Navigation("Server");
                });

            modelBuilder.Entity("CodeMindful.CodeTools.DataDictionary.Models.SqlDependency", b =>
                {
                    b.HasOne("CodeMindful.CodeTools.DataDictionary.Models.SqlObject", "ReferencedObject")
                        .WithMany()
                        .HasForeignKey("ReferencedObjectId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CodeMindful.CodeTools.DataDictionary.Models.SqlObject", "SqlObject")
                        .WithMany()
                        .HasForeignKey("SqlObjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ReferencedObject");

                    b.Navigation("SqlObject");
                });

            modelBuilder.Entity("CodeMindful.CodeTools.DataDictionary.Models.SqlDependencyError", b =>
                {
                    b.HasOne("CodeMindful.CodeTools.DataDictionary.Models.SqlObject", "ReferencedObject")
                        .WithMany()
                        .HasForeignKey("ReferencedObjectId");

                    b.HasOne("CodeMindful.CodeTools.DataDictionary.Models.SqlObject", "SqlObject")
                        .WithMany()
                        .HasForeignKey("SqlObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReferencedObject");

                    b.Navigation("SqlObject");
                });

            modelBuilder.Entity("CodeMindful.CodeTools.DataDictionary.Models.Integration", b =>
                {
                    b.Navigation("ChildIntegrations");

                    b.Navigation("IntegrationObjects");
                });
#pragma warning restore 612, 618
        }
    }
}
